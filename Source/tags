!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/70a6275b/
Aliasing	d3dx12.h	/^    static inline CD3DX12_RESOURCE_BARRIER Aliasing($/;"	f	struct:CD3DX12_RESOURCE_BARRIER	typeref:typename:CD3DX12_RESOURCE_BARRIER
ArraySize	d3dx12.h	/^    inline UINT16 ArraySize() const$/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:UINT16
BlendState	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC BlendState;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC
BlendStateCb	d3dx12.h	/^    virtual void BlendStateCb(const D3D12_BLEND_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
BlendStateCb	d3dx12.h	/^    void BlendStateCb(const D3D12_BLEND_DESC& BlendState) {PipelineStream.BlendState = CD3DX12_B/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Buffer	d3dx12.h	/^    static inline CD3DX12_RESOURCE_DESC Buffer( $/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:CD3DX12_RESOURCE_DESC
CD3DX12_BLEND_DESC	d3dx12.h	/^    CD3DX12_BLEND_DESC()$/;"	f	struct:CD3DX12_BLEND_DESC
CD3DX12_BLEND_DESC	d3dx12.h	/^    explicit CD3DX12_BLEND_DESC( CD3DX12_DEFAULT )$/;"	f	struct:CD3DX12_BLEND_DESC
CD3DX12_BLEND_DESC	d3dx12.h	/^    explicit CD3DX12_BLEND_DESC( const D3D12_BLEND_DESC& o ) :$/;"	f	struct:CD3DX12_BLEND_DESC
CD3DX12_BLEND_DESC	d3dx12.h	/^struct CD3DX12_BLEND_DESC : public D3D12_BLEND_DESC$/;"	s
CD3DX12_BOX	d3dx12.h	/^    CD3DX12_BOX()$/;"	f	struct:CD3DX12_BOX
CD3DX12_BOX	d3dx12.h	/^    explicit CD3DX12_BOX( const D3D12_BOX& o ) :$/;"	f	struct:CD3DX12_BOX
CD3DX12_BOX	d3dx12.h	/^    explicit CD3DX12_BOX($/;"	f	struct:CD3DX12_BOX
CD3DX12_BOX	d3dx12.h	/^struct CD3DX12_BOX : public D3D12_BOX$/;"	s
CD3DX12_CLEAR_VALUE	d3dx12.h	/^    CD3DX12_CLEAR_VALUE( $/;"	f	struct:CD3DX12_CLEAR_VALUE
CD3DX12_CLEAR_VALUE	d3dx12.h	/^    CD3DX12_CLEAR_VALUE()$/;"	f	struct:CD3DX12_CLEAR_VALUE
CD3DX12_CLEAR_VALUE	d3dx12.h	/^    explicit CD3DX12_CLEAR_VALUE(const D3D12_CLEAR_VALUE &o) :$/;"	f	struct:CD3DX12_CLEAR_VALUE
CD3DX12_CLEAR_VALUE	d3dx12.h	/^struct CD3DX12_CLEAR_VALUE : public D3D12_CLEAR_VALUE$/;"	s
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE() {}$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE(CD3DX12_DEFAULT) { ptr = 0; }$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE &other, INT offsetInDes/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE &other, INT offsetScale/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    explicit CD3DX12_CPU_DESCRIPTOR_HANDLE(const D3D12_CPU_DESCRIPTOR_HANDLE &o) :$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE
CD3DX12_CPU_DESCRIPTOR_HANDLE	d3dx12.h	/^struct CD3DX12_CPU_DESCRIPTOR_HANDLE : public D3D12_CPU_DESCRIPTOR_HANDLE$/;"	s
CD3DX12_DEFAULT	d3dx12.h	/^struct CD3DX12_DEFAULT {};$/;"	s
CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^    CD3DX12_DEPTH_STENCIL_DESC()$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC
CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC( CD3DX12_DEFAULT )$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC
CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC( const D3D12_DEPTH_STENCIL_DESC& o ) :$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC
CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC($/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC
CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^struct CD3DX12_DEPTH_STENCIL_DESC : public D3D12_DEPTH_STENCIL_DESC$/;"	s
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    CD3DX12_DEPTH_STENCIL_DESC1()$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC1( CD3DX12_DEFAULT )$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC1( const D3D12_DEPTH_STENCIL_DESC& o )$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC1( const D3D12_DEPTH_STENCIL_DESC1& o ) :$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    explicit CD3DX12_DEPTH_STENCIL_DESC1($/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^struct CD3DX12_DEPTH_STENCIL_DESC1 : public D3D12_DEPTH_STENCIL_DESC1$/;"	s
CD3DX12_DESCRIPTOR_RANGE	d3dx12.h	/^    CD3DX12_DESCRIPTOR_RANGE($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE
CD3DX12_DESCRIPTOR_RANGE	d3dx12.h	/^    CD3DX12_DESCRIPTOR_RANGE() { }$/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE
CD3DX12_DESCRIPTOR_RANGE	d3dx12.h	/^    explicit CD3DX12_DESCRIPTOR_RANGE(const D3D12_DESCRIPTOR_RANGE &o) :$/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE
CD3DX12_DESCRIPTOR_RANGE	d3dx12.h	/^struct CD3DX12_DESCRIPTOR_RANGE : public D3D12_DESCRIPTOR_RANGE$/;"	s
CD3DX12_DESCRIPTOR_RANGE1	d3dx12.h	/^    CD3DX12_DESCRIPTOR_RANGE1($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE1
CD3DX12_DESCRIPTOR_RANGE1	d3dx12.h	/^    CD3DX12_DESCRIPTOR_RANGE1() { }$/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE1
CD3DX12_DESCRIPTOR_RANGE1	d3dx12.h	/^    explicit CD3DX12_DESCRIPTOR_RANGE1(const D3D12_DESCRIPTOR_RANGE1 &o) :$/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE1
CD3DX12_DESCRIPTOR_RANGE1	d3dx12.h	/^struct CD3DX12_DESCRIPTOR_RANGE1 : public D3D12_DESCRIPTOR_RANGE1$/;"	s
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE() {}$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE(CD3DX12_DEFAULT) { ptr = 0; }$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE &other, INT offsetInDes/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE &other, INT offsetScale/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^    explicit CD3DX12_GPU_DESCRIPTOR_HANDLE(const D3D12_GPU_DESCRIPTOR_HANDLE &o) :$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE
CD3DX12_GPU_DESCRIPTOR_HANDLE	d3dx12.h	/^struct CD3DX12_GPU_DESCRIPTOR_HANDLE : public D3D12_GPU_DESCRIPTOR_HANDLE$/;"	s
CD3DX12_HEAP_DESC	d3dx12.h	/^    CD3DX12_HEAP_DESC( $/;"	f	struct:CD3DX12_HEAP_DESC
CD3DX12_HEAP_DESC	d3dx12.h	/^    CD3DX12_HEAP_DESC()$/;"	f	struct:CD3DX12_HEAP_DESC
CD3DX12_HEAP_DESC	d3dx12.h	/^    explicit CD3DX12_HEAP_DESC(const D3D12_HEAP_DESC &o) :$/;"	f	struct:CD3DX12_HEAP_DESC
CD3DX12_HEAP_DESC	d3dx12.h	/^struct CD3DX12_HEAP_DESC : public D3D12_HEAP_DESC$/;"	s
CD3DX12_HEAP_PROPERTIES	d3dx12.h	/^    CD3DX12_HEAP_PROPERTIES( $/;"	f	struct:CD3DX12_HEAP_PROPERTIES
CD3DX12_HEAP_PROPERTIES	d3dx12.h	/^    CD3DX12_HEAP_PROPERTIES()$/;"	f	struct:CD3DX12_HEAP_PROPERTIES
CD3DX12_HEAP_PROPERTIES	d3dx12.h	/^    explicit CD3DX12_HEAP_PROPERTIES( $/;"	f	struct:CD3DX12_HEAP_PROPERTIES
CD3DX12_HEAP_PROPERTIES	d3dx12.h	/^    explicit CD3DX12_HEAP_PROPERTIES(const D3D12_HEAP_PROPERTIES &o) :$/;"	f	struct:CD3DX12_HEAP_PROPERTIES
CD3DX12_HEAP_PROPERTIES	d3dx12.h	/^struct CD3DX12_HEAP_PROPERTIES : public D3D12_HEAP_PROPERTIES$/;"	s
CD3DX12_PACKED_MIP_INFO	d3dx12.h	/^    CD3DX12_PACKED_MIP_INFO( $/;"	f	struct:CD3DX12_PACKED_MIP_INFO
CD3DX12_PACKED_MIP_INFO	d3dx12.h	/^    CD3DX12_PACKED_MIP_INFO()$/;"	f	struct:CD3DX12_PACKED_MIP_INFO
CD3DX12_PACKED_MIP_INFO	d3dx12.h	/^    explicit CD3DX12_PACKED_MIP_INFO(const D3D12_PACKED_MIP_INFO &o) :$/;"	f	struct:CD3DX12_PACKED_MIP_INFO
CD3DX12_PACKED_MIP_INFO	d3dx12.h	/^struct CD3DX12_PACKED_MIP_INFO : public D3D12_PACKED_MIP_INFO$/;"	s
CD3DX12_PIPELINE_STATE_STREAM	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM() {}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM
CD3DX12_PIPELINE_STATE_STREAM	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc)$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM
CD3DX12_PIPELINE_STATE_STREAM	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc)$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM
CD3DX12_PIPELINE_STATE_STREAM	d3dx12.h	/^struct CD3DX12_PIPELINE_STATE_STREAM$/;"	s
CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< CD3DX12_BLEND_DESC,                 D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<CD3DX12_BLEND_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND,CD3DX12_DEFAULT>
CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_CACHED_PIPELINE_STATE,        D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_CACHED_PIPELINE_STATE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO>
CD3DX12_PIPELINE_STATE_STREAM_CS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS>
CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< CD3DX12_DEPTH_STENCIL_DESC,         D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<CD3DX12_DEPTH_STENCIL_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL,CD3DX12_DEFAULT>
CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL1	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< CD3DX12_DEPTH_STENCIL_DESC1,        D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<CD3DX12_DEPTH_STENCIL_DESC1,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1,CD3DX12_DEFAULT>
CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< DXGI_FORMAT,                        D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<DXGI_FORMAT,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT>
CD3DX12_PIPELINE_STATE_STREAM_DS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS>
CD3DX12_PIPELINE_STATE_STREAM_FLAGS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_PIPELINE_STATE_FLAGS,         D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_PIPELINE_STATE_FLAGS,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS>
CD3DX12_PIPELINE_STATE_STREAM_GS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS>
CD3DX12_PIPELINE_STATE_STREAM_HS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS>
CD3DX12_PIPELINE_STATE_STREAM_IB_STRIP_CUT_VALUE	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_INDEX_BUFFER_STRIP_CUT_VALUE, D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_INDEX_BUFFER_STRIP_CUT_VALUE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE>
CD3DX12_PIPELINE_STATE_STREAM_INPUT_LAYOUT	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_INPUT_LAYOUT_DESC,            D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_INPUT_LAYOUT_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT>
CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< UINT,                               D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<UINT,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK>
CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	d3dx12.h	/^struct CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER : public ID3DX12PipelineParserCallbacks$/;"	s
CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_PRIMITIVE_TOPOLOGY_TYPE,      D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_PRIMITIVE_TOPOLOGY_TYPE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY>
CD3DX12_PIPELINE_STATE_STREAM_PS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS>
CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< CD3DX12_RASTERIZER_DESC,            D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<CD3DX12_RASTERIZER_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER,CD3DX12_DEFAULT>
CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_RT_FORMAT_ARRAY,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_RT_FORMAT_ARRAY,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS>
CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< ID3D12RootSignature*,               D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<ID3D12RootSignature *,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE>
CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< DXGI_SAMPLE_DESC,                   D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<DXGI_SAMPLE_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC>
CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< UINT,                               D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<UINT,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK>
CD3DX12_PIPELINE_STATE_STREAM_STREAM_OUTPUT	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_STREAM_OUTPUT_DESC,           D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_STREAM_OUTPUT_DESC,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT>
CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT() : _Type(Type), _Inner(DefaultArg()) {}$/;"	f	class:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT
CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT(InnerStructType const& i) : _Type(Type), _Inner(i) {/;"	f	class:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT
CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	d3dx12.h	/^class alignas(void*) CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT$/;"	c
CD3DX12_PIPELINE_STATE_STREAM_VS	d3dx12.h	/^typedef CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT< D3D12_SHADER_BYTECODE,              D3D12_PIPEL/;"	t	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT<D3D12_SHADER_BYTECODE,D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS>
CD3DX12_RANGE	d3dx12.h	/^    CD3DX12_RANGE( $/;"	f	struct:CD3DX12_RANGE
CD3DX12_RANGE	d3dx12.h	/^    CD3DX12_RANGE()$/;"	f	struct:CD3DX12_RANGE
CD3DX12_RANGE	d3dx12.h	/^    explicit CD3DX12_RANGE(const D3D12_RANGE &o) :$/;"	f	struct:CD3DX12_RANGE
CD3DX12_RANGE	d3dx12.h	/^struct CD3DX12_RANGE : public D3D12_RANGE$/;"	s
CD3DX12_RANGE_UINT64	d3dx12.h	/^    CD3DX12_RANGE_UINT64( $/;"	f	struct:CD3DX12_RANGE_UINT64
CD3DX12_RANGE_UINT64	d3dx12.h	/^    CD3DX12_RANGE_UINT64()$/;"	f	struct:CD3DX12_RANGE_UINT64
CD3DX12_RANGE_UINT64	d3dx12.h	/^    explicit CD3DX12_RANGE_UINT64(const D3D12_RANGE_UINT64 &o) :$/;"	f	struct:CD3DX12_RANGE_UINT64
CD3DX12_RANGE_UINT64	d3dx12.h	/^struct CD3DX12_RANGE_UINT64 : public D3D12_RANGE_UINT64$/;"	s
CD3DX12_RASTERIZER_DESC	d3dx12.h	/^    CD3DX12_RASTERIZER_DESC()$/;"	f	struct:CD3DX12_RASTERIZER_DESC
CD3DX12_RASTERIZER_DESC	d3dx12.h	/^    explicit CD3DX12_RASTERIZER_DESC( CD3DX12_DEFAULT )$/;"	f	struct:CD3DX12_RASTERIZER_DESC
CD3DX12_RASTERIZER_DESC	d3dx12.h	/^    explicit CD3DX12_RASTERIZER_DESC( const D3D12_RASTERIZER_DESC& o ) :$/;"	f	struct:CD3DX12_RASTERIZER_DESC
CD3DX12_RASTERIZER_DESC	d3dx12.h	/^    explicit CD3DX12_RASTERIZER_DESC($/;"	f	struct:CD3DX12_RASTERIZER_DESC
CD3DX12_RASTERIZER_DESC	d3dx12.h	/^struct CD3DX12_RASTERIZER_DESC : public D3D12_RASTERIZER_DESC$/;"	s
CD3DX12_RECT	d3dx12.h	/^    CD3DX12_RECT()$/;"	f	struct:CD3DX12_RECT
CD3DX12_RECT	d3dx12.h	/^    explicit CD3DX12_RECT( const D3D12_RECT& o ) :$/;"	f	struct:CD3DX12_RECT
CD3DX12_RECT	d3dx12.h	/^    explicit CD3DX12_RECT($/;"	f	struct:CD3DX12_RECT
CD3DX12_RECT	d3dx12.h	/^struct CD3DX12_RECT : public D3D12_RECT$/;"	s
CD3DX12_RESOURCE_ALLOCATION_INFO	d3dx12.h	/^    CD3DX12_RESOURCE_ALLOCATION_INFO($/;"	f	struct:CD3DX12_RESOURCE_ALLOCATION_INFO
CD3DX12_RESOURCE_ALLOCATION_INFO	d3dx12.h	/^    CD3DX12_RESOURCE_ALLOCATION_INFO()$/;"	f	struct:CD3DX12_RESOURCE_ALLOCATION_INFO
CD3DX12_RESOURCE_ALLOCATION_INFO	d3dx12.h	/^    explicit CD3DX12_RESOURCE_ALLOCATION_INFO( const D3D12_RESOURCE_ALLOCATION_INFO& o ) :$/;"	f	struct:CD3DX12_RESOURCE_ALLOCATION_INFO
CD3DX12_RESOURCE_ALLOCATION_INFO	d3dx12.h	/^struct CD3DX12_RESOURCE_ALLOCATION_INFO : public D3D12_RESOURCE_ALLOCATION_INFO$/;"	s
CD3DX12_RESOURCE_BARRIER	d3dx12.h	/^    CD3DX12_RESOURCE_BARRIER()$/;"	f	struct:CD3DX12_RESOURCE_BARRIER
CD3DX12_RESOURCE_BARRIER	d3dx12.h	/^    explicit CD3DX12_RESOURCE_BARRIER(const D3D12_RESOURCE_BARRIER &o) :$/;"	f	struct:CD3DX12_RESOURCE_BARRIER
CD3DX12_RESOURCE_BARRIER	d3dx12.h	/^struct CD3DX12_RESOURCE_BARRIER : public D3D12_RESOURCE_BARRIER$/;"	s
CD3DX12_RESOURCE_DESC	d3dx12.h	/^    CD3DX12_RESOURCE_DESC( $/;"	f	struct:CD3DX12_RESOURCE_DESC
CD3DX12_RESOURCE_DESC	d3dx12.h	/^    CD3DX12_RESOURCE_DESC()$/;"	f	struct:CD3DX12_RESOURCE_DESC
CD3DX12_RESOURCE_DESC	d3dx12.h	/^    explicit CD3DX12_RESOURCE_DESC( const D3D12_RESOURCE_DESC& o ) :$/;"	f	struct:CD3DX12_RESOURCE_DESC
CD3DX12_RESOURCE_DESC	d3dx12.h	/^struct CD3DX12_RESOURCE_DESC : public D3D12_RESOURCE_DESC$/;"	s
CD3DX12_ROOT_CONSTANTS	d3dx12.h	/^    CD3DX12_ROOT_CONSTANTS($/;"	f	struct:CD3DX12_ROOT_CONSTANTS
CD3DX12_ROOT_CONSTANTS	d3dx12.h	/^    CD3DX12_ROOT_CONSTANTS() {}$/;"	f	struct:CD3DX12_ROOT_CONSTANTS
CD3DX12_ROOT_CONSTANTS	d3dx12.h	/^    explicit CD3DX12_ROOT_CONSTANTS(const D3D12_ROOT_CONSTANTS &o) :$/;"	f	struct:CD3DX12_ROOT_CONSTANTS
CD3DX12_ROOT_CONSTANTS	d3dx12.h	/^struct CD3DX12_ROOT_CONSTANTS : public D3D12_ROOT_CONSTANTS$/;"	s
CD3DX12_ROOT_DESCRIPTOR	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR
CD3DX12_ROOT_DESCRIPTOR	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR() {}$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR
CD3DX12_ROOT_DESCRIPTOR	d3dx12.h	/^    explicit CD3DX12_ROOT_DESCRIPTOR(const D3D12_ROOT_DESCRIPTOR &o) :$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR
CD3DX12_ROOT_DESCRIPTOR	d3dx12.h	/^struct CD3DX12_ROOT_DESCRIPTOR : public D3D12_ROOT_DESCRIPTOR$/;"	s
CD3DX12_ROOT_DESCRIPTOR1	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR1($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR1
CD3DX12_ROOT_DESCRIPTOR1	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR1() {}$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR1
CD3DX12_ROOT_DESCRIPTOR1	d3dx12.h	/^    explicit CD3DX12_ROOT_DESCRIPTOR1(const D3D12_ROOT_DESCRIPTOR1 &o) :$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR1
CD3DX12_ROOT_DESCRIPTOR1	d3dx12.h	/^struct CD3DX12_ROOT_DESCRIPTOR1 : public D3D12_ROOT_DESCRIPTOR1$/;"	s
CD3DX12_ROOT_DESCRIPTOR_TABLE	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR_TABLE($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE
CD3DX12_ROOT_DESCRIPTOR_TABLE	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR_TABLE() {}$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE
CD3DX12_ROOT_DESCRIPTOR_TABLE	d3dx12.h	/^    explicit CD3DX12_ROOT_DESCRIPTOR_TABLE(const D3D12_ROOT_DESCRIPTOR_TABLE &o) :$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE
CD3DX12_ROOT_DESCRIPTOR_TABLE	d3dx12.h	/^struct CD3DX12_ROOT_DESCRIPTOR_TABLE : public D3D12_ROOT_DESCRIPTOR_TABLE$/;"	s
CD3DX12_ROOT_DESCRIPTOR_TABLE1	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR_TABLE1($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE1
CD3DX12_ROOT_DESCRIPTOR_TABLE1	d3dx12.h	/^    CD3DX12_ROOT_DESCRIPTOR_TABLE1() {}$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE1
CD3DX12_ROOT_DESCRIPTOR_TABLE1	d3dx12.h	/^    explicit CD3DX12_ROOT_DESCRIPTOR_TABLE1(const D3D12_ROOT_DESCRIPTOR_TABLE1 &o) :$/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE1
CD3DX12_ROOT_DESCRIPTOR_TABLE1	d3dx12.h	/^struct CD3DX12_ROOT_DESCRIPTOR_TABLE1 : public D3D12_ROOT_DESCRIPTOR_TABLE1$/;"	s
CD3DX12_ROOT_PARAMETER	d3dx12.h	/^    CD3DX12_ROOT_PARAMETER() {}$/;"	f	struct:CD3DX12_ROOT_PARAMETER
CD3DX12_ROOT_PARAMETER	d3dx12.h	/^    explicit CD3DX12_ROOT_PARAMETER(const D3D12_ROOT_PARAMETER &o) :$/;"	f	struct:CD3DX12_ROOT_PARAMETER
CD3DX12_ROOT_PARAMETER	d3dx12.h	/^struct CD3DX12_ROOT_PARAMETER : public D3D12_ROOT_PARAMETER$/;"	s
CD3DX12_ROOT_PARAMETER1	d3dx12.h	/^    CD3DX12_ROOT_PARAMETER1() {}$/;"	f	struct:CD3DX12_ROOT_PARAMETER1
CD3DX12_ROOT_PARAMETER1	d3dx12.h	/^    explicit CD3DX12_ROOT_PARAMETER1(const D3D12_ROOT_PARAMETER1 &o) :$/;"	f	struct:CD3DX12_ROOT_PARAMETER1
CD3DX12_ROOT_PARAMETER1	d3dx12.h	/^struct CD3DX12_ROOT_PARAMETER1 : public D3D12_ROOT_PARAMETER1$/;"	s
CD3DX12_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_ROOT_SIGNATURE_DESC($/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC
CD3DX12_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_ROOT_SIGNATURE_DESC() {}$/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC
CD3DX12_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_ROOT_SIGNATURE_DESC(CD3DX12_DEFAULT)$/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC
CD3DX12_ROOT_SIGNATURE_DESC	d3dx12.h	/^    explicit CD3DX12_ROOT_SIGNATURE_DESC(const D3D12_ROOT_SIGNATURE_DESC &o) :$/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC
CD3DX12_ROOT_SIGNATURE_DESC	d3dx12.h	/^struct CD3DX12_ROOT_SIGNATURE_DESC : public D3D12_ROOT_SIGNATURE_DESC$/;"	s
CD3DX12_RT_FORMAT_ARRAY	d3dx12.h	/^    CD3DX12_RT_FORMAT_ARRAY() {}$/;"	f	struct:CD3DX12_RT_FORMAT_ARRAY
CD3DX12_RT_FORMAT_ARRAY	d3dx12.h	/^    explicit CD3DX12_RT_FORMAT_ARRAY(const D3D12_RT_FORMAT_ARRAY& o)$/;"	f	struct:CD3DX12_RT_FORMAT_ARRAY
CD3DX12_RT_FORMAT_ARRAY	d3dx12.h	/^    explicit CD3DX12_RT_FORMAT_ARRAY(const DXGI_FORMAT* pFormats, UINT NumFormats)$/;"	f	struct:CD3DX12_RT_FORMAT_ARRAY
CD3DX12_RT_FORMAT_ARRAY	d3dx12.h	/^struct CD3DX12_RT_FORMAT_ARRAY : public D3D12_RT_FORMAT_ARRAY$/;"	s
CD3DX12_SHADER_BYTECODE	d3dx12.h	/^    CD3DX12_SHADER_BYTECODE($/;"	f	struct:CD3DX12_SHADER_BYTECODE
CD3DX12_SHADER_BYTECODE	d3dx12.h	/^    CD3DX12_SHADER_BYTECODE()$/;"	f	struct:CD3DX12_SHADER_BYTECODE
CD3DX12_SHADER_BYTECODE	d3dx12.h	/^    explicit CD3DX12_SHADER_BYTECODE(const D3D12_SHADER_BYTECODE &o) :$/;"	f	struct:CD3DX12_SHADER_BYTECODE
CD3DX12_SHADER_BYTECODE	d3dx12.h	/^struct CD3DX12_SHADER_BYTECODE : public D3D12_SHADER_BYTECODE$/;"	s
CD3DX12_STATIC_SAMPLER_DESC	d3dx12.h	/^    CD3DX12_STATIC_SAMPLER_DESC($/;"	f	struct:CD3DX12_STATIC_SAMPLER_DESC
CD3DX12_STATIC_SAMPLER_DESC	d3dx12.h	/^    CD3DX12_STATIC_SAMPLER_DESC() {}$/;"	f	struct:CD3DX12_STATIC_SAMPLER_DESC
CD3DX12_STATIC_SAMPLER_DESC	d3dx12.h	/^    explicit CD3DX12_STATIC_SAMPLER_DESC(const D3D12_STATIC_SAMPLER_DESC &o) :$/;"	f	struct:CD3DX12_STATIC_SAMPLER_DESC
CD3DX12_STATIC_SAMPLER_DESC	d3dx12.h	/^struct CD3DX12_STATIC_SAMPLER_DESC : public D3D12_STATIC_SAMPLER_DESC$/;"	s
CD3DX12_SUBRESOURCE_FOOTPRINT	d3dx12.h	/^    CD3DX12_SUBRESOURCE_FOOTPRINT( $/;"	f	struct:CD3DX12_SUBRESOURCE_FOOTPRINT
CD3DX12_SUBRESOURCE_FOOTPRINT	d3dx12.h	/^    CD3DX12_SUBRESOURCE_FOOTPRINT()$/;"	f	struct:CD3DX12_SUBRESOURCE_FOOTPRINT
CD3DX12_SUBRESOURCE_FOOTPRINT	d3dx12.h	/^    explicit CD3DX12_SUBRESOURCE_FOOTPRINT( $/;"	f	struct:CD3DX12_SUBRESOURCE_FOOTPRINT
CD3DX12_SUBRESOURCE_FOOTPRINT	d3dx12.h	/^    explicit CD3DX12_SUBRESOURCE_FOOTPRINT(const D3D12_SUBRESOURCE_FOOTPRINT &o) :$/;"	f	struct:CD3DX12_SUBRESOURCE_FOOTPRINT
CD3DX12_SUBRESOURCE_FOOTPRINT	d3dx12.h	/^struct CD3DX12_SUBRESOURCE_FOOTPRINT : public D3D12_SUBRESOURCE_FOOTPRINT$/;"	s
CD3DX12_SUBRESOURCE_RANGE_UINT64	d3dx12.h	/^    CD3DX12_SUBRESOURCE_RANGE_UINT64( $/;"	f	struct:CD3DX12_SUBRESOURCE_RANGE_UINT64
CD3DX12_SUBRESOURCE_RANGE_UINT64	d3dx12.h	/^    CD3DX12_SUBRESOURCE_RANGE_UINT64()$/;"	f	struct:CD3DX12_SUBRESOURCE_RANGE_UINT64
CD3DX12_SUBRESOURCE_RANGE_UINT64	d3dx12.h	/^    explicit CD3DX12_SUBRESOURCE_RANGE_UINT64(const D3D12_SUBRESOURCE_RANGE_UINT64 &o) :$/;"	f	struct:CD3DX12_SUBRESOURCE_RANGE_UINT64
CD3DX12_SUBRESOURCE_RANGE_UINT64	d3dx12.h	/^struct CD3DX12_SUBRESOURCE_RANGE_UINT64 : public D3D12_SUBRESOURCE_RANGE_UINT64$/;"	s
CD3DX12_SUBRESOURCE_TILING	d3dx12.h	/^    CD3DX12_SUBRESOURCE_TILING( $/;"	f	struct:CD3DX12_SUBRESOURCE_TILING
CD3DX12_SUBRESOURCE_TILING	d3dx12.h	/^    CD3DX12_SUBRESOURCE_TILING()$/;"	f	struct:CD3DX12_SUBRESOURCE_TILING
CD3DX12_SUBRESOURCE_TILING	d3dx12.h	/^    explicit CD3DX12_SUBRESOURCE_TILING(const D3D12_SUBRESOURCE_TILING &o) :$/;"	f	struct:CD3DX12_SUBRESOURCE_TILING
CD3DX12_SUBRESOURCE_TILING	d3dx12.h	/^struct CD3DX12_SUBRESOURCE_TILING : public D3D12_SUBRESOURCE_TILING$/;"	s
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^    CD3DX12_TEXTURE_COPY_LOCATION()$/;"	f	struct:CD3DX12_TEXTURE_COPY_LOCATION
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^    CD3DX12_TEXTURE_COPY_LOCATION(ID3D12Resource* pRes) { pResource = pRes; }$/;"	f	struct:CD3DX12_TEXTURE_COPY_LOCATION
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^    CD3DX12_TEXTURE_COPY_LOCATION(ID3D12Resource* pRes, D3D12_PLACED_SUBRESOURCE_FOOTPRINT const/;"	f	struct:CD3DX12_TEXTURE_COPY_LOCATION
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^    CD3DX12_TEXTURE_COPY_LOCATION(ID3D12Resource* pRes, UINT Sub)$/;"	f	struct:CD3DX12_TEXTURE_COPY_LOCATION
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^    explicit CD3DX12_TEXTURE_COPY_LOCATION(const D3D12_TEXTURE_COPY_LOCATION &o) :$/;"	f	struct:CD3DX12_TEXTURE_COPY_LOCATION
CD3DX12_TEXTURE_COPY_LOCATION	d3dx12.h	/^struct CD3DX12_TEXTURE_COPY_LOCATION : public D3D12_TEXTURE_COPY_LOCATION$/;"	s
CD3DX12_TILED_RESOURCE_COORDINATE	d3dx12.h	/^    CD3DX12_TILED_RESOURCE_COORDINATE( $/;"	f	struct:CD3DX12_TILED_RESOURCE_COORDINATE
CD3DX12_TILED_RESOURCE_COORDINATE	d3dx12.h	/^    CD3DX12_TILED_RESOURCE_COORDINATE()$/;"	f	struct:CD3DX12_TILED_RESOURCE_COORDINATE
CD3DX12_TILED_RESOURCE_COORDINATE	d3dx12.h	/^    explicit CD3DX12_TILED_RESOURCE_COORDINATE(const D3D12_TILED_RESOURCE_COORDINATE &o) :$/;"	f	struct:CD3DX12_TILED_RESOURCE_COORDINATE
CD3DX12_TILED_RESOURCE_COORDINATE	d3dx12.h	/^struct CD3DX12_TILED_RESOURCE_COORDINATE : public D3D12_TILED_RESOURCE_COORDINATE$/;"	s
CD3DX12_TILE_REGION_SIZE	d3dx12.h	/^    CD3DX12_TILE_REGION_SIZE( $/;"	f	struct:CD3DX12_TILE_REGION_SIZE
CD3DX12_TILE_REGION_SIZE	d3dx12.h	/^    CD3DX12_TILE_REGION_SIZE()$/;"	f	struct:CD3DX12_TILE_REGION_SIZE
CD3DX12_TILE_REGION_SIZE	d3dx12.h	/^    explicit CD3DX12_TILE_REGION_SIZE(const D3D12_TILE_REGION_SIZE &o) :$/;"	f	struct:CD3DX12_TILE_REGION_SIZE
CD3DX12_TILE_REGION_SIZE	d3dx12.h	/^struct CD3DX12_TILE_REGION_SIZE : public D3D12_TILE_REGION_SIZE$/;"	s
CD3DX12_TILE_SHAPE	d3dx12.h	/^    CD3DX12_TILE_SHAPE( $/;"	f	struct:CD3DX12_TILE_SHAPE
CD3DX12_TILE_SHAPE	d3dx12.h	/^    CD3DX12_TILE_SHAPE()$/;"	f	struct:CD3DX12_TILE_SHAPE
CD3DX12_TILE_SHAPE	d3dx12.h	/^    explicit CD3DX12_TILE_SHAPE(const D3D12_TILE_SHAPE &o) :$/;"	f	struct:CD3DX12_TILE_SHAPE
CD3DX12_TILE_SHAPE	d3dx12.h	/^struct CD3DX12_TILE_SHAPE : public D3D12_TILE_SHAPE$/;"	s
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC($/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC() {}$/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC(CD3DX12_DEFAULT)$/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    explicit CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC(const D3D12_ROOT_SIGNATURE_DESC &o)$/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    explicit CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC(const D3D12_ROOT_SIGNATURE_DESC1 &o)$/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^    explicit CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC(const D3D12_VERSIONED_ROOT_SIGNATURE_DESC &o)/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC
CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	d3dx12.h	/^struct CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC : public D3D12_VERSIONED_ROOT_SIGNATURE_DESC$/;"	s
CD3DX12_VIEWPORT	d3dx12.h	/^    CD3DX12_VIEWPORT()$/;"	f	struct:CD3DX12_VIEWPORT
CD3DX12_VIEWPORT	d3dx12.h	/^    explicit CD3DX12_VIEWPORT( const D3D12_VIEWPORT& o ) :$/;"	f	struct:CD3DX12_VIEWPORT
CD3DX12_VIEWPORT	d3dx12.h	/^    explicit CD3DX12_VIEWPORT($/;"	f	struct:CD3DX12_VIEWPORT
CD3DX12_VIEWPORT	d3dx12.h	/^struct CD3DX12_VIEWPORT : public D3D12_VIEWPORT$/;"	s
CS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_CS CS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_CS
CSCb	d3dx12.h	/^    virtual void CSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
CSCb	d3dx12.h	/^    void CSCb(const D3D12_SHADER_BYTECODE& CS) {PipelineStream.CS = CS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
CachedPSO	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO CachedPSO;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO
CachedPSOCb	d3dx12.h	/^    virtual void CachedPSOCb(const D3D12_CACHED_PIPELINE_STATE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
CachedPSOCb	d3dx12.h	/^    void CachedPSOCb(const D3D12_CACHED_PIPELINE_STATE& CachedPSO) {PipelineStream.CachedPSO = C/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
CalcSubresource	d3dx12.h	/^    inline UINT CalcSubresource(UINT MipSlice, UINT ArraySlice, UINT PlaneSlice)$/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:UINT
CommandListCast	d3dx12.h	/^inline ID3D12CommandList * const * CommandListCast(t_CommandListType * const * pp)$/;"	f	typeref:typename:ID3D12CommandList * const *
ComputeDescV0	d3dx12.h	/^    D3D12_COMPUTE_PIPELINE_STATE_DESC ComputeDescV0() const$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:D3D12_COMPUTE_PIPELINE_STATE_DESC
CreateCircleGeometry	Scene.cpp	/^void Scene::CreateCircleGeometry()$/;"	f	class:Scene	typeref:typename:void
D	d3dx12.h	/^        D3D12_DEPTH_STENCIL_DESC D;$/;"	m	struct:CD3DX12_DEPTH_STENCIL_DESC1	typeref:typename:D3D12_DEPTH_STENCIL_DESC
D3D12CalcSubresource	d3dx12.h	/^inline UINT D3D12CalcSubresource( UINT MipSlice, UINT ArraySlice, UINT PlaneSlice, UINT MipLevel/;"	f	typeref:typename:UINT
D3D12DecomposeSubresource	d3dx12.h	/^inline void D3D12DecomposeSubresource( UINT Subresource, UINT MipLevels, UINT ArraySize, _Out_ T/;"	f	typeref:typename:void
D3D12GetFormatPlaneCount	d3dx12.h	/^inline UINT8 D3D12GetFormatPlaneCount($/;"	f	typeref:typename:UINT8
D3D12IsLayoutOpaque	d3dx12.h	/^inline bool D3D12IsLayoutOpaque( D3D12_TEXTURE_LAYOUT Layout )$/;"	f	typeref:typename:bool
D3DX12GetBaseSubobjectType	d3dx12.h	/^inline D3D12_PIPELINE_STATE_SUBOBJECT_TYPE D3DX12GetBaseSubobjectType(D3D12_PIPELINE_STATE_SUBOB/;"	f	typeref:typename:D3D12_PIPELINE_STATE_SUBOBJECT_TYPE
D3DX12ParsePipelineStream	d3dx12.h	/^inline HRESULT D3DX12ParsePipelineStream(const D3D12_PIPELINE_STATE_STREAM_DESC& Desc, ID3DX12Pi/;"	f	typeref:typename:HRESULT
D3DX12SerializeVersionedRootSignature	d3dx12.h	/^inline HRESULT D3DX12SerializeVersionedRootSignature($/;"	f	typeref:typename:HRESULT
DS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_DS DS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_DS
DSCb	d3dx12.h	/^    virtual void DSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
DSCb	d3dx12.h	/^    void DSCb(const D3D12_SHADER_BYTECODE& DS) {PipelineStream.DS = DS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
DSVFormat	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT DSVFormat;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT
DSVFormatCb	d3dx12.h	/^    virtual void DSVFormatCb(DXGI_FORMAT) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
DSVFormatCb	d3dx12.h	/^    void DSVFormatCb(DXGI_FORMAT DSVFormat) {PipelineStream.DSVFormat = DSVFormat;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Depth	d3dx12.h	/^    inline UINT16 Depth() const$/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:UINT16
DepthStencilState	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL1 DepthStencilState;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL1
DepthStencilState1Cb	d3dx12.h	/^    virtual void DepthStencilState1Cb(const D3D12_DEPTH_STENCIL_DESC1&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
DepthStencilState1Cb	d3dx12.h	/^    void DepthStencilState1Cb(const D3D12_DEPTH_STENCIL_DESC1& DepthStencilState) {PipelineStrea/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
DepthStencilStateCb	d3dx12.h	/^    virtual void DepthStencilStateCb(const D3D12_DEPTH_STENCIL_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
DepthStencilStateCb	d3dx12.h	/^    void DepthStencilStateCb(const D3D12_DEPTH_STENCIL_DESC& DepthStencilState) {PipelineStream./;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Desc	d3dx12.h	/^    D3D12_RESOURCE_DESC Desc = pDestinationResource->GetDesc();$/;"	v	typeref:typename:D3D12_RESOURCE_DESC
DestData	d3dx12.h	/^        D3D12_MEMCPY_DEST DestData = { pData + pLayouts[i].Offset, pLayouts[i].Footprint.RowPitc/;"	v	typeref:typename:D3D12_MEMCPY_DEST
DestinationDesc	d3dx12.h	/^    D3D12_RESOURCE_DESC DestinationDesc = pDestinationResource->GetDesc();$/;"	v	typeref:typename:D3D12_RESOURCE_DESC
DirectX12	DirectX12.h	/^class DirectX12$/;"	c
Draw	Scene.cpp	/^void Scene::Draw() const$/;"	f	class:Scene	typeref:typename:void
Dst	d3dx12.h	/^            CD3DX12_TEXTURE_COPY_LOCATION Dst(pDestinationResource, i + FirstSubresource);$/;"	v	typeref:typename:CD3DX12_TEXTURE_COPY_LOCATION
ErrorBadInputParameter	d3dx12.h	/^    virtual void ErrorBadInputParameter(UINT \/*ParameterIndex*\/) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
ErrorBadInputParameter	d3dx12.h	/^    void ErrorBadInputParameter(UINT) {}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
ErrorDuplicateSubobject	d3dx12.h	/^    virtual void ErrorDuplicateSubobject(D3D12_PIPELINE_STATE_SUBOBJECT_TYPE \/*DuplicateType*\//;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
ErrorDuplicateSubobject	d3dx12.h	/^    void ErrorDuplicateSubobject(D3D12_PIPELINE_STATE_SUBOBJECT_TYPE) {}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
ErrorUnknownSubobject	d3dx12.h	/^    virtual void ErrorUnknownSubobject(UINT \/*UnknownTypeValue*\/) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
ErrorUnknownSubobject	d3dx12.h	/^    void ErrorUnknownSubobject(UINT) {}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Flags	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_FLAGS Flags;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_FLAGS
FlagsCb	d3dx12.h	/^    virtual void FlagsCb(D3D12_PIPELINE_STATE_FLAGS) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
FlagsCb	d3dx12.h	/^    void FlagsCb(D3D12_PIPELINE_STATE_FLAGS Flags) {PipelineStream.Flags = Flags;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Flush	DirectX12.cpp	/^void DirectX12::Flush() const$/;"	f	class:DirectX12	typeref:typename:void
GS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_GS GS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_GS
GSCb	d3dx12.h	/^    virtual void GSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
GSCb	d3dx12.h	/^    void GSCb(const D3D12_SHADER_BYTECODE& GS) {PipelineStream.GS = GS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
GetBackBuffer	DirectX12.h	/^inline ID3D12Resource* DirectX12::GetBackBuffer() const$/;"	f	class:DirectX12	typeref:typename:ID3D12Resource *
GetBackBufferHandle	DirectX12.h	/^inline D3D12_CPU_DESCRIPTOR_HANDLE DirectX12::GetBackBufferHandle() const$/;"	f	class:DirectX12	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE
GetCmdAllocator	DirectX12.h	/^inline ID3D12CommandAllocator* DirectX12::GetCmdAllocator() const$/;"	f	class:DirectX12	typeref:typename:ID3D12CommandAllocator *
GetCmdList	DirectX12.h	/^inline ID3D12GraphicsCommandList* DirectX12::GetCmdList() const$/;"	f	class:DirectX12	typeref:typename:ID3D12GraphicsCommandList *
GetCmdQueue	DirectX12.h	/^inline ID3D12CommandQueue* DirectX12::GetCmdQueue() const$/;"	f	class:DirectX12	typeref:typename:ID3D12CommandQueue *
GetDepthBufferHandle	DirectX12.h	/^inline D3D12_CPU_DESCRIPTOR_HANDLE DirectX12::GetDepthBufferHandle() const$/;"	f	class:DirectX12	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE
GetDevice	DirectX12.h	/^inline ID3D12Device* DirectX12::GetDevice() const$/;"	f	class:DirectX12	typeref:typename:ID3D12Device *
GetScissorRect	DirectX12.h	/^inline const D3D12_RECT& DirectX12::GetScissorRect() const$/;"	f	class:DirectX12	typeref:typename:const D3D12_RECT &
GetTime	Library.cpp	/^double GetTime()$/;"	f	typeref:typename:double
GetViewport	DirectX12.h	/^inline const D3D12_VIEWPORT& DirectX12::GetViewport() const$/;"	f	class:DirectX12	typeref:typename:const D3D12_VIEWPORT &
GraphicsDescV0	d3dx12.h	/^    D3D12_GRAPHICS_PIPELINE_STATE_DESC GraphicsDescV0() const$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:D3D12_GRAPHICS_PIPELINE_STATE_DESC
HS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_HS HS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_HS
HSCb	d3dx12.h	/^    virtual void HSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
HSCb	d3dx12.h	/^    void HSCb(const D3D12_SHADER_BYTECODE& HS) {PipelineStream.HS = HS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
IBStripCutValue	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_IB_STRIP_CUT_VALUE IBStripCutValue;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_IB_STRIP_CUT_VALUE
IBStripCutValueCb	d3dx12.h	/^    virtual void IBStripCutValueCb(D3D12_INDEX_BUFFER_STRIP_CUT_VALUE) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
IBStripCutValueCb	d3dx12.h	/^    void IBStripCutValueCb(D3D12_INDEX_BUFFER_STRIP_CUT_VALUE IBStripCutValue) {PipelineStream.I/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
ID3DX12PipelineParserCallbacks	d3dx12.h	/^struct ID3DX12PipelineParserCallbacks$/;"	s
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE1	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_CONSTANTS	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR1	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE1	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC	typeref:typename:void
Init	d3dx12.h	/^    inline void Init($/;"	f	struct:CD3DX12_STATIC_SAMPLER_DESC	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_DESCRIPTOR_RANGE1	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_ROOT_CONSTANTS	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR1	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR_TABLE1	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_ROOT_SIGNATURE_DESC	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init($/;"	f	struct:CD3DX12_STATIC_SAMPLER_DESC	typeref:typename:void
Init	d3dx12.h	/^    static inline void Init(_Out_ D3D12_ROOT_DESCRIPTOR &table, UINT shaderRegister, UINT regist/;"	f	struct:CD3DX12_ROOT_DESCRIPTOR	typeref:typename:void
InitAsConstantBufferView	d3dx12.h	/^    inline void InitAsConstantBufferView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsConstantBufferView	d3dx12.h	/^    inline void InitAsConstantBufferView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsConstantBufferView	d3dx12.h	/^    static inline void InitAsConstantBufferView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsConstantBufferView	d3dx12.h	/^    static inline void InitAsConstantBufferView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsConstants	d3dx12.h	/^    inline void InitAsConstants($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsConstants	d3dx12.h	/^    inline void InitAsConstants($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsConstants	d3dx12.h	/^    static inline void InitAsConstants($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsConstants	d3dx12.h	/^    static inline void InitAsConstants($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsDescriptorTable	d3dx12.h	/^    inline void InitAsDescriptorTable($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsDescriptorTable	d3dx12.h	/^    inline void InitAsDescriptorTable($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsDescriptorTable	d3dx12.h	/^    static inline void InitAsDescriptorTable($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsDescriptorTable	d3dx12.h	/^    static inline void InitAsDescriptorTable($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsShaderResourceView	d3dx12.h	/^    inline void InitAsShaderResourceView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsShaderResourceView	d3dx12.h	/^    inline void InitAsShaderResourceView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsShaderResourceView	d3dx12.h	/^    static inline void InitAsShaderResourceView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsShaderResourceView	d3dx12.h	/^    static inline void InitAsShaderResourceView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsUnorderedAccessView	d3dx12.h	/^    inline void InitAsUnorderedAccessView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsUnorderedAccessView	d3dx12.h	/^    inline void InitAsUnorderedAccessView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitAsUnorderedAccessView	d3dx12.h	/^    static inline void InitAsUnorderedAccessView($/;"	f	struct:CD3DX12_ROOT_PARAMETER	typeref:typename:void
InitAsUnorderedAccessView	d3dx12.h	/^    static inline void InitAsUnorderedAccessView($/;"	f	struct:CD3DX12_ROOT_PARAMETER1	typeref:typename:void
InitOffsetted	d3dx12.h	/^    inline void InitOffsetted(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE &base, INT offsetInDescript/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:void
InitOffsetted	d3dx12.h	/^    inline void InitOffsetted(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE &base, INT offsetScaledByIn/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:void
InitOffsetted	d3dx12.h	/^    inline void InitOffsetted(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE &base, INT offsetInDescript/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:void
InitOffsetted	d3dx12.h	/^    inline void InitOffsetted(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE &base, INT offsetScaledByIn/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:void
InitOffsetted	d3dx12.h	/^    static inline void InitOffsetted(_Out_ D3D12_CPU_DESCRIPTOR_HANDLE &handle, _In_ const D3D12/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:void
InitOffsetted	d3dx12.h	/^    static inline void InitOffsetted(_Out_ D3D12_GPU_DESCRIPTOR_HANDLE &handle, _In_ const D3D12/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:void
Init_1_0	d3dx12.h	/^    inline void Init_1_0($/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	typeref:typename:void
Init_1_0	d3dx12.h	/^    static inline void Init_1_0($/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	typeref:typename:void
Init_1_1	d3dx12.h	/^    inline void Init_1_1($/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	typeref:typename:void
Init_1_1	d3dx12.h	/^    static inline void Init_1_1($/;"	f	struct:CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC	typeref:typename:void
Initialize	DirectX12.cpp	/^bool DirectX12::Initialize(HWND window)$/;"	f	class:DirectX12	typeref:typename:bool
Initialize	Scene.cpp	/^void Scene::Initialize()$/;"	f	class:Scene	typeref:typename:void
InputLayout	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_INPUT_LAYOUT InputLayout;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_INPUT_LAYOUT
InputLayoutCb	d3dx12.h	/^    virtual void InputLayoutCb(const D3D12_INPUT_LAYOUT_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
InputLayoutCb	d3dx12.h	/^    void InputLayoutCb(const D3D12_INPUT_LAYOUT_DESC& InputLayout) {PipelineStream.InputLayout =/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
IntermediateDesc	d3dx12.h	/^    D3D12_RESOURCE_DESC IntermediateDesc = pIntermediate->GetDesc();$/;"	v	typeref:typename:D3D12_RESOURCE_DESC
IsCPUAccessible	d3dx12.h	/^    bool IsCPUAccessible() const$/;"	f	struct:CD3DX12_HEAP_DESC	typeref:typename:bool
IsCPUAccessible	d3dx12.h	/^    bool IsCPUAccessible() const$/;"	f	struct:CD3DX12_HEAP_PROPERTIES	typeref:typename:bool
Layouts	d3dx12.h	/^    D3D12_PLACED_SUBRESOURCE_FOOTPRINT Layouts[MaxSubresources];$/;"	v	typeref:typename:D3D12_PLACED_SUBRESOURCE_FOOTPRINT[]
LoadFile	Library.cpp	/^std::vector<uint8_t> LoadFile(const char* fileName)$/;"	f	typeref:typename:std::vector<uint8_t>
MakeWindow	ProceduralShapes.cpp	/^static HWND MakeWindow(const char* name, uint32_t resolutionX, uint32_t resolutionY, WNDPROC win/;"	f	typeref:typename:HWND	file:
MemToAlloc	d3dx12.h	/^    UINT64 MemToAlloc = static_cast<UINT64>(sizeof(D3D12_PLACED_SUBRESOURCE_FOOTPRINT) + sizeof(/;"	v	typeref:typename:UINT64
MemcpySubresource	d3dx12.h	/^inline void MemcpySubresource($/;"	f	typeref:typename:void
NodeMask	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK NodeMask;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK
NodeMaskCb	d3dx12.h	/^    virtual void NodeMaskCb(UINT) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
NodeMaskCb	d3dx12.h	/^    void NodeMaskCb(UINT NodeMask) {PipelineStream.NodeMask = NodeMask;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
NumRows	d3dx12.h	/^    UINT NumRows[MaxSubresources];$/;"	v	typeref:typename:UINT[]
Offset	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE& Offset(INT offsetInDescriptors, UINT descriptorIncrementSize)$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_CPU_DESCRIPTOR_HANDLE &
Offset	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE& Offset(INT offsetScaledByIncrementSize) $/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_CPU_DESCRIPTOR_HANDLE &
Offset	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE& Offset(INT offsetInDescriptors, UINT descriptorIncrementSize)$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_GPU_DESCRIPTOR_HANDLE &
Offset	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE& Offset(INT offsetScaledByIncrementSize) $/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_GPU_DESCRIPTOR_HANDLE &
PS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_PS PS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_PS
PSCb	d3dx12.h	/^    virtual void PSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
PSCb	d3dx12.h	/^    void PSCb(const D3D12_SHADER_BYTECODE& PS) {PipelineStream.PS = PS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
PipelineStream	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM PipelineStream;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM
PlaneCount	d3dx12.h	/^    inline UINT8 PlaneCount(_In_ ID3D12Device* pDevice) const$/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:UINT8
Present	DirectX12.cpp	/^void DirectX12::Present() const$/;"	f	class:DirectX12	typeref:typename:void
PrimitiveTopologyType	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY PrimitiveTopologyType;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY
PrimitiveTopologyTypeCb	d3dx12.h	/^    virtual void PrimitiveTopologyTypeCb(D3D12_PRIMITIVE_TOPOLOGY_TYPE) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
PrimitiveTopologyTypeCb	d3dx12.h	/^    void PrimitiveTopologyTypeCb(D3D12_PRIMITIVE_TOPOLOGY_TYPE PrimitiveTopologyType) {PipelineS/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
ProcessWindowMessage	ProceduralShapes.cpp	/^static LRESULT CALLBACK ProcessWindowMessage(HWND window, UINT message, WPARAM wParam, LPARAM lP/;"	f	typeref:typename:LRESULT CALLBACK	file:
RTVFormats	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS RTVFormats;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS
RTVFormatsCb	d3dx12.h	/^    virtual void RTVFormatsCb(const D3D12_RT_FORMAT_ARRAY&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
RTVFormatsCb	d3dx12.h	/^    void RTVFormatsCb(const D3D12_RT_FORMAT_ARRAY& RTVFormats) {PipelineStream.RTVFormats = RTVF/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
RasterizerState	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER RasterizerState;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER
RasterizerStateCb	d3dx12.h	/^    virtual void RasterizerStateCb(const D3D12_RASTERIZER_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
RasterizerStateCb	d3dx12.h	/^    void RasterizerStateCb(const D3D12_RASTERIZER_DESC& RasterizerState) {PipelineStream.Rasteri/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
RequiredSize	d3dx12.h	/^    UINT64 RequiredSize = 0;$/;"	v	typeref:typename:UINT64
Result	d3dx12.h	/^    UINT64 Result = UpdateSubresources(pCmdList, pDestinationResource, pIntermediate, FirstSubre/;"	v	typeref:typename:UINT64
RootSignatureCb	d3dx12.h	/^    virtual void RootSignatureCb(ID3D12RootSignature*) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
RootSignatureCb	d3dx12.h	/^    void RootSignatureCb(ID3D12RootSignature* pRootSignature) {PipelineStream.pRootSignature = p/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
RowSizesInBytes	d3dx12.h	/^    UINT64 RowSizesInBytes[MaxSubresources];$/;"	v	typeref:typename:UINT64[]
Run	ProceduralShapes.cpp	/^static int Run()$/;"	f	typeref:typename:int	file:
SampleDesc	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC SampleDesc;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC
SampleDescCb	d3dx12.h	/^    virtual void SampleDescCb(const DXGI_SAMPLE_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
SampleDescCb	d3dx12.h	/^    void SampleDescCb(const DXGI_SAMPLE_DESC& SampleDesc) {PipelineStream.SampleDesc = SampleDes/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
SampleMask	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK SampleMask;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK
SampleMaskCb	d3dx12.h	/^    virtual void SampleMaskCb(UINT) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
SampleMaskCb	d3dx12.h	/^    void SampleMaskCb(UINT SampleMask) {PipelineStream.SampleMask = SampleMask;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Scene	Scene.h	/^class Scene$/;"	c
Scene	Scene.h	/^inline Scene::Scene(const DirectX12& dx12) : m_Dx12(dx12)$/;"	f	class:Scene
SrcBox	d3dx12.h	/^        CD3DX12_BOX SrcBox( UINT( pLayouts[0].Offset ), UINT( pLayouts[0].Offset + pLayouts[0].F/;"	v	typeref:typename:CD3DX12_BOX
StreamOutput	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_STREAM_OUTPUT StreamOutput;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_STREAM_OUTPUT
StreamOutputCb	d3dx12.h	/^    virtual void StreamOutputCb(const D3D12_STREAM_OUTPUT_DESC&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
StreamOutputCb	d3dx12.h	/^    void StreamOutputCb(const D3D12_STREAM_OUTPUT_DESC& StreamOutput) {PipelineStream.StreamOutp/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
Subresources	d3dx12.h	/^    inline UINT Subresources(_In_ ID3D12Device* pDevice) const$/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:UINT
Tex1D	d3dx12.h	/^    static inline CD3DX12_RESOURCE_DESC Tex1D( $/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:CD3DX12_RESOURCE_DESC
Tex2D	d3dx12.h	/^    static inline CD3DX12_RESOURCE_DESC Tex2D( $/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:CD3DX12_RESOURCE_DESC
Tex3D	d3dx12.h	/^    static inline CD3DX12_RESOURCE_DESC Tex3D( $/;"	f	struct:CD3DX12_RESOURCE_DESC	typeref:typename:CD3DX12_RESOURCE_DESC
Transition	d3dx12.h	/^    static inline CD3DX12_RESOURCE_BARRIER Transition($/;"	f	struct:CD3DX12_RESOURCE_BARRIER	typeref:typename:CD3DX12_RESOURCE_BARRIER
UAV	d3dx12.h	/^    static inline CD3DX12_RESOURCE_BARRIER UAV($/;"	f	struct:CD3DX12_RESOURCE_BARRIER	typeref:typename:CD3DX12_RESOURCE_BARRIER
Update	Scene.cpp	/^void Scene::Update(double frameTime, float frameTimeDelta)$/;"	f	class:Scene	typeref:typename:void
UpdateFrameTime	ProceduralShapes.cpp	/^static void UpdateFrameTime(HWND window, const char* windowText, double& o_Time, float& o_TimeDe/;"	f	typeref:typename:void	file:
VS	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_VS VS;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_VS
VSCb	d3dx12.h	/^    virtual void VSCb(const D3D12_SHADER_BYTECODE&) {}$/;"	f	struct:ID3DX12PipelineParserCallbacks	typeref:typename:void
VSCb	d3dx12.h	/^    void VSCb(const D3D12_SHADER_BYTECODE& VS) {PipelineStream.VS = VS;}$/;"	f	struct:CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER	typeref:typename:void
WinMain	ProceduralShapes.cpp	/^int CALLBACK WinMain(HINSTANCE, HINSTANCE, LPSTR, int)$/;"	f	typeref:typename:int CALLBACK
_Inner	d3dx12.h	/^    InnerStructType _Inner;$/;"	m	class:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	typeref:typename:InnerStructType
_Type	d3dx12.h	/^    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE _Type;$/;"	m	class:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	typeref:typename:D3D12_PIPELINE_STATE_SUBOBJECT_TYPE
hr	d3dx12.h	/^    HRESULT hr = pIntermediate->Map(0, NULL, reinterpret_cast<void**>(&pData));$/;"	v	typeref:typename:HRESULT
i	d3dx12.h	/^        for (UINT i = 0; i < NumSubresources; ++i)$/;"	v	typeref:typename:UINT
i	d3dx12.h	/^    for (UINT i = 0; i < NumSubresources; ++i)$/;"	v	typeref:typename:UINT
k_Name	ProceduralShapes.cpp	/^static constexpr char* k_Name = "Procedural Shapes";$/;"	v	typeref:typename:char *	file:
k_Resolution	ProceduralShapes.cpp	/^static constexpr uint32_t k_Resolution[2] = { 1280, 720 };$/;"	v	typeref:typename:uint32_t[2]	file:
m_BackBufferIndex	DirectX12.h	/^	mutable uint32_t m_BackBufferIndex = 0;$/;"	m	class:DirectX12	typeref:typename:uint32_t
m_CircleIb	Scene.h	/^	ID3D12Resource* m_CircleIb;$/;"	m	class:Scene	typeref:typename:ID3D12Resource *
m_CircleVb	Scene.h	/^	ID3D12Resource* m_CircleVb;$/;"	m	class:Scene	typeref:typename:ID3D12Resource *
m_CmdList	DirectX12.h	/^	ID3D12GraphicsCommandList* m_CmdList = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12GraphicsCommandList *
m_CmdQueue	DirectX12.h	/^	ID3D12CommandQueue* m_CmdQueue = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12CommandQueue *
m_CpuCompletedFrames	DirectX12.h	/^	mutable uint64_t m_CpuCompletedFrames = 0;$/;"	m	class:DirectX12	typeref:typename:uint64_t
m_DepthBuffer	DirectX12.h	/^	ID3D12Resource*	m_DepthBuffer = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12Resource *
m_DepthBufferHeap	DirectX12.h	/^	ID3D12DescriptorHeap* m_DepthBufferHeap = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12DescriptorHeap *
m_DepthBufferHeapStart	DirectX12.h	/^	D3D12_CPU_DESCRIPTOR_HANDLE m_DepthBufferHeapStart;$/;"	m	class:DirectX12	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE
m_DescriptorSize	DirectX12.h	/^	uint32_t m_DescriptorSize;$/;"	m	class:DirectX12	typeref:typename:uint32_t
m_DescriptorSizeRtv	DirectX12.h	/^	uint32_t m_DescriptorSizeRtv;$/;"	m	class:DirectX12	typeref:typename:uint32_t
m_Device	DirectX12.h	/^	ID3D12Device* m_Device = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12Device *
m_Dx12	Scene.h	/^	const DirectX12& m_Dx12;$/;"	m	class:Scene	typeref:typename:const DirectX12 &
m_Factory	DirectX12.h	/^	IDXGIFactory4* m_Factory = nullptr;$/;"	m	class:DirectX12	typeref:typename:IDXGIFactory4 *
m_FrameFence	DirectX12.h	/^	ID3D12Fence* m_FrameFence = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12Fence *
m_FrameFenceEvent	DirectX12.h	/^	HANDLE m_FrameFenceEvent = nullptr;$/;"	m	class:DirectX12	typeref:typename:HANDLE
m_FrameIndex	DirectX12.h	/^	mutable uint32_t m_FrameIndex = 0;$/;"	m	class:DirectX12	typeref:typename:uint32_t
m_Pso	Scene.h	/^	ID3D12PipelineState* m_Pso;$/;"	m	class:Scene	typeref:typename:ID3D12PipelineState *
m_Rs	Scene.h	/^	ID3D12RootSignature* m_Rs;$/;"	m	class:Scene	typeref:typename:ID3D12RootSignature *
m_ScissorRect	DirectX12.h	/^	D3D12_RECT m_ScissorRect;$/;"	m	class:DirectX12	typeref:typename:D3D12_RECT
m_SwapBuffersHeap	DirectX12.h	/^	ID3D12DescriptorHeap* m_SwapBuffersHeap = nullptr;$/;"	m	class:DirectX12	typeref:typename:ID3D12DescriptorHeap *
m_SwapBuffersHeapStart	DirectX12.h	/^	D3D12_CPU_DESCRIPTOR_HANDLE m_SwapBuffersHeapStart;$/;"	m	class:DirectX12	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE
m_SwapChain	DirectX12.h	/^	IDXGISwapChain3* m_SwapChain = nullptr;$/;"	m	class:DirectX12	typeref:typename:IDXGISwapChain3 *
m_Viewport	DirectX12.h	/^	D3D12_VIEWPORT m_Viewport;$/;"	m	class:DirectX12	typeref:typename:D3D12_VIEWPORT
operator !=	d3dx12.h	/^    bool operator!=(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE& other) const$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:bool
operator !=	d3dx12.h	/^    inline bool operator!=(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE& other) const$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:bool
operator !=	d3dx12.h	/^inline bool operator!=( const D3D12_BOX& l, const D3D12_BOX& r )$/;"	f	typeref:typename:bool
operator !=	d3dx12.h	/^inline bool operator!=( const D3D12_HEAP_DESC& l, const D3D12_HEAP_DESC& r )$/;"	f	typeref:typename:bool
operator !=	d3dx12.h	/^inline bool operator!=( const D3D12_HEAP_PROPERTIES& l, const D3D12_HEAP_PROPERTIES& r )$/;"	f	typeref:typename:bool
operator !=	d3dx12.h	/^inline bool operator!=( const D3D12_RESOURCE_DESC& l, const D3D12_RESOURCE_DESC& r )$/;"	f	typeref:typename:bool
operator !=	d3dx12.h	/^inline bool operator!=( const D3D12_VIEWPORT& l, const D3D12_VIEWPORT& r )$/;"	f	typeref:typename:bool
operator =	d3dx12.h	/^    CD3DX12_CPU_DESCRIPTOR_HANDLE &operator=(const D3D12_CPU_DESCRIPTOR_HANDLE &other)$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_CPU_DESCRIPTOR_HANDLE &
operator =	d3dx12.h	/^    CD3DX12_GPU_DESCRIPTOR_HANDLE &operator=(const D3D12_GPU_DESCRIPTOR_HANDLE &other)$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:CD3DX12_GPU_DESCRIPTOR_HANDLE &
operator =	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT& operator=(InnerStructType const& i) { _Inner = i; r/;"	f	class:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_SUBOBJECT &
operator ==	d3dx12.h	/^    bool operator==(_In_ const D3D12_CPU_DESCRIPTOR_HANDLE& other) const$/;"	f	struct:CD3DX12_CPU_DESCRIPTOR_HANDLE	typeref:typename:bool
operator ==	d3dx12.h	/^    inline bool operator==(_In_ const D3D12_GPU_DESCRIPTOR_HANDLE& other) const$/;"	f	struct:CD3DX12_GPU_DESCRIPTOR_HANDLE	typeref:typename:bool
operator ==	d3dx12.h	/^inline bool operator==( const D3D12_BOX& l, const D3D12_BOX& r )$/;"	f	typeref:typename:bool
operator ==	d3dx12.h	/^inline bool operator==( const D3D12_HEAP_DESC& l, const D3D12_HEAP_DESC& r )$/;"	f	typeref:typename:bool
operator ==	d3dx12.h	/^inline bool operator==( const D3D12_HEAP_PROPERTIES& l, const D3D12_HEAP_PROPERTIES& r )$/;"	f	typeref:typename:bool
operator ==	d3dx12.h	/^inline bool operator==( const D3D12_RESOURCE_DESC& l, const D3D12_RESOURCE_DESC& r )$/;"	f	typeref:typename:bool
operator ==	d3dx12.h	/^inline bool operator==( const D3D12_VIEWPORT& l, const D3D12_VIEWPORT& r )$/;"	f	typeref:typename:bool
operator new[]	ProceduralShapes.cpp	/^void* operator new[](size_t size, const char* \/*name*\/, int \/*flags*\/, unsigned \/*debugFlag/;"	f	typeref:typename:void *
operator new[]	ProceduralShapes.cpp	/^void* operator new[](size_t size, size_t alignment, size_t alignmentOffset, const char* \/*name*/;"	f	typeref:typename:void *
pData	d3dx12.h	/^    BYTE* pData;$/;"	v	typeref:typename:BYTE *
pDevice	d3dx12.h	/^    ID3D12Device* pDevice;$/;"	v	typeref:typename:ID3D12Device *
pLayouts	d3dx12.h	/^    D3D12_PLACED_SUBRESOURCE_FOOTPRINT* pLayouts = reinterpret_cast<D3D12_PLACED_SUBRESOURCE_FOO/;"	v	typeref:typename:D3D12_PLACED_SUBRESOURCE_FOOTPRINT *
pMem	d3dx12.h	/^    void* pMem = HeapAlloc(GetProcessHeap(), 0, static_cast<SIZE_T>(MemToAlloc));$/;"	v	typeref:typename:void *
pNumRows	d3dx12.h	/^    UINT* pNumRows = reinterpret_cast<UINT*>(pRowSizesInBytes + NumSubresources);$/;"	v	typeref:typename:UINT *
pRootSignature	d3dx12.h	/^    CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE pRootSignature;$/;"	m	struct:CD3DX12_PIPELINE_STATE_STREAM	typeref:typename:CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE
pRowSizesInBytes	d3dx12.h	/^    UINT64* pRowSizesInBytes = reinterpret_cast<UINT64*>(pLayouts + NumSubresources);$/;"	v	typeref:typename:UINT64 *
~CD3DX12_BLEND_DESC	d3dx12.h	/^    ~CD3DX12_BLEND_DESC() {}$/;"	f	struct:CD3DX12_BLEND_DESC
~CD3DX12_BOX	d3dx12.h	/^    ~CD3DX12_BOX() {}$/;"	f	struct:CD3DX12_BOX
~CD3DX12_DEPTH_STENCIL_DESC	d3dx12.h	/^    ~CD3DX12_DEPTH_STENCIL_DESC() {}$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC
~CD3DX12_DEPTH_STENCIL_DESC1	d3dx12.h	/^    ~CD3DX12_DEPTH_STENCIL_DESC1() {}$/;"	f	struct:CD3DX12_DEPTH_STENCIL_DESC1
~CD3DX12_RASTERIZER_DESC	d3dx12.h	/^    ~CD3DX12_RASTERIZER_DESC() {}$/;"	f	struct:CD3DX12_RASTERIZER_DESC
~CD3DX12_RECT	d3dx12.h	/^    ~CD3DX12_RECT() {}$/;"	f	struct:CD3DX12_RECT
~CD3DX12_VIEWPORT	d3dx12.h	/^    ~CD3DX12_VIEWPORT() {}$/;"	f	struct:CD3DX12_VIEWPORT
~DirectX12	DirectX12.cpp	/^DirectX12::~DirectX12()$/;"	f	class:DirectX12
